import java.text.DecimalFormat
import java.text.SimpleDateFormat

plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
    // Apply the Crashlytics Gradle plugin
    id 'com.google.firebase.crashlytics'
}

// Load keystore
//def keystorePropertiesFile = rootProject.file("keystore.properties");
//def keystoreProperties = new Properties()
//keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdk 31

    signingConfigs {
        release {
            //storeFile file('../key.jks')
            //storePassword keystoreProperties['storePassword']
            //keyAlias keystoreProperties['keyAlias']
            //keyPassword keystoreProperties['keyPassword']
        }
    }

    defaultConfig {
        applicationId "com.mobwal.pro"
        minSdk 22
        targetSdk 31
        versionCode 1
        versionName getVersion()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        setProperty("archivesBaseName", getVersion())
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            firebaseCrashlytics {
                mappingFileUploadEnabled true
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation project(path: ':walker-library')
    implementation project(path: ':mimic-library')
    //implementation project(path: ':core')

    implementation 'org.osmdroid:osmdroid-android:6.1.8'
    implementation platform('com.google.firebase:firebase-bom:28.3.1')
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'androidx.preference:preference:1.2.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1'
    implementation 'androidx.navigation:navigation-fragment:2.4.2'
    implementation 'androidx.navigation:navigation-ui:2.4.2'
    implementation 'androidx.preference:preference:1.2.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.annotation:annotation:1.3.0'
    implementation 'androidx.camera:camera-camera2:1.0.2'
    implementation 'androidx.camera:camera-lifecycle:1.0.2'
    implementation 'androidx.camera:camera-view:1.2.0-alpha02'
    implementation 'com.google.android.gms:play-services-maps:18.0.2'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'com.google.android.gms:play-services-location:20.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation ('io.socket:socket.io-client:2.0.1') {
        // excluding org.json which is provided by Android
        exclude group: 'org.json', module: 'json'
    }
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:core:1.4.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

static def startOfDay() {
    def now = new Date().getTime()
    def start = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss").parse("2021-08-18 0:00:00").getTime()

    return new DecimalFormat("#").format(Math.floor(Math.abs(now - start) / (1000 * 3600 * 24)))
}

static def minuteOfDay() {
    def now = new Date()
    return (now.format("HH").toInteger() * 60) + now.format("mm").toInteger()
}

static def getRelease() {
    /**
     * 0 – альфа (прототип);
     * 1 – бета (бета);
     * 2 – выпуск-кандидат (передан на тестирование заказчику);
     * 3 – публичный выпуск (окончательно передан заказчику).
     */
    return 3
}

static def getVersion() {
    return "1." + startOfDay() + "." + getRelease() + "." + minuteOfDay()
}
